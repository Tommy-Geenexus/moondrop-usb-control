<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>FunctionNaming:ItemFilter.kt$@Composable fun ItemFilter( modifier: Modifier = Modifier, currentFilter: Filter = Filter.default(), onFilterSelected: (Filter) -&gt; Unit = {} )</ID>
    <ID>FunctionNaming:ItemFilter.kt$@Preview(name = "ItemFilter") @Composable fun ItemFilterPreview()</ID>
    <ID>FunctionNaming:ItemGain.kt$@Composable fun ItemGain( modifier: Modifier = Modifier, currentGain: Gain = Gain.default(), onGainSelected: (Gain) -&gt; Unit = {} )</ID>
    <ID>FunctionNaming:ItemGain.kt$@Preview(name = "ItemGain") @Composable fun ItemGainPreview()</ID>
    <ID>FunctionNaming:ItemIndicatorState.kt$@Composable fun ItemIndicatorState( modifier: Modifier = Modifier, currentIndicatorState: IndicatorState = IndicatorState.default(), onIndicatorStateSelected: (IndicatorState) -&gt; Unit = {} )</ID>
    <ID>FunctionNaming:ItemIndicatorState.kt$@Preview(name = "ItemIndicatorState") @Composable fun ItemIndicatorStatePreview()</ID>
    <ID>FunctionNaming:MainScreen.kt$@Composable fun MainScreen( modifier: Modifier = Modifier, snackBarHostState: SnackbarHostState = remember { SnackbarHostState() }, filter: Filter = Filter.default(), gain: Gain = Gain.default(), indicatorState: IndicatorState = IndicatorState.default(), isDeviceAttached: Boolean = false, isLoading: Boolean = false, usbPermissionGranted: Boolean = false, onPermissionRequest: () -&gt; Unit = {}, onFilterSelected: (Filter) -&gt; Unit = {}, onGainSelected: (Gain) -&gt; Unit = {}, onIndicatorStateSelected: (IndicatorState) -&gt; Unit = {} )</ID>
    <ID>FunctionNaming:MainScreen.kt$@Composable fun MainScreen( viewModel: MainViewModel, modifier: Modifier = Modifier )</ID>
    <ID>FunctionNaming:MainScreen.kt$@Preview(name = "Main Screen") @Composable fun MainScreenPreview()</ID>
    <ID>FunctionNaming:MoondropUsbControlTheme.kt$@Composable fun MoondropUsbControlTheme( darkTheme: Boolean = isSystemInDarkTheme(), content: @Composable () -&gt; Unit )</ID>
    <ID>FunctionNaming:NavGraph.kt$@Composable fun NavGraph( navController: NavHostController, modifier: Modifier = Modifier, startDestination: String = NavDestinations.ROUTE_MAIN )</ID>
    <ID>LongMethod:MainScreen.kt$@Composable fun MainScreen( modifier: Modifier = Modifier, snackBarHostState: SnackbarHostState = remember { SnackbarHostState() }, filter: Filter = Filter.default(), gain: Gain = Gain.default(), indicatorState: IndicatorState = IndicatorState.default(), isDeviceAttached: Boolean = false, isLoading: Boolean = false, usbPermissionGranted: Boolean = false, onPermissionRequest: () -&gt; Unit = {}, onFilterSelected: (Filter) -&gt; Unit = {}, onGainSelected: (Gain) -&gt; Unit = {}, onIndicatorStateSelected: (IndicatorState) -&gt; Unit = {} )</ID>
    <ID>LongMethod:MainScreen.kt$@Composable fun MainScreen( viewModel: MainViewModel, modifier: Modifier = Modifier )</ID>
    <ID>LongParameterList:MainScreen.kt$( modifier: Modifier = Modifier, snackBarHostState: SnackbarHostState = remember { SnackbarHostState() }, filter: Filter = Filter.default(), gain: Gain = Gain.default(), indicatorState: IndicatorState = IndicatorState.default(), isDeviceAttached: Boolean = false, isLoading: Boolean = false, usbPermissionGranted: Boolean = false, onPermissionRequest: () -&gt; Unit = {}, onFilterSelected: (Filter) -&gt; Unit = {}, onGainSelected: (Gain) -&gt; Unit = {}, onIndicatorStateSelected: (IndicatorState) -&gt; Unit = {} )</ID>
    <ID>MagicNumber:MoondropDawnUsbCommand.kt$MoondropDawnUsbCommand$6</ID>
    <ID>MagicNumber:MoondropDawnUsbCommand.kt$MoondropDawnUsbCommand$64</ID>
    <ID>MagicNumber:MoondropDawnUsbCommand.kt$MoondropDawnUsbCommand$91</ID>
    <ID>MagicNumber:MoondropDawnUsbCommand.kt$MoondropDawnUsbCommand$93</ID>
  </CurrentIssues>
</SmellBaseline>
